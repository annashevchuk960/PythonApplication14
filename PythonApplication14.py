import random
def dog_breed_test():
    print("Тест: Яка порода собак вам підходить?")
    score_a = 0
    score_b = 0
    score_c = 0
    print("1. Як багато часу ви готові приділяти прогулянкам з собакою?")
    print("a) Багато часу, я люблю активний відпочинок.")
    print("b) Трохи часу, я можу прогулюватися, але не надто часто.")
    print("c) Мало часу, мені підійде спокійна собака.")
    answer = input("Ваш вибір (a, b, c): ").lower()
    if answer == 'a':
        score_a += 1
    elif answer == 'b':
        score_b += 1
    elif answer == 'c':
        score_c += 1
    print("\n2. Як ви ставитеся до виховання собак?")
    print("a) Я готовий витратити час на тренування і навчання.")
    print("b) Я можу навчити собаку основним командним, але не люблю зайвий стрес.")
    print("c) Я хочу, щоб собака була незалежною і не вимагала багато виховання.")
    answer = input("Ваш вибір (a, b, c): ").lower()
    if answer == 'a':
        score_a += 1
    elif answer == 'b':
        score_b += 1
    elif answer == 'c':
        score_c += 1
    print("\n3. Який розмір собаки вам подобається?")
    print("a) Великий, сильний пес.")
    print("b) Середній розмір, щоб зручно тримати вдома.")
    print("c) Маленький, компактний пес.")
    answer = input("Ваш вибір (a, b, c): ").lower()
    if answer == 'a':
        score_a += 1
    elif answer == 'b':
        score_b += 1
    elif answer == 'c':
        score_c += 1
    print("\n4. Як ви ставитеся до шерсті собаки?")
    print("a) Мені подобається, коли собака має багато шерсті, навіть якщо потрібно часто доглядати.")
    print("b) Я хочу, щоб собака мала коротку шерсть і була легка в догляді.")
    print("c) Я не можу мати собаку, яка линяє.")
    answer = input("Ваш вибір (a, b, c): ").lower()
    if answer == 'a':
        score_a += 1
    elif answer == 'b':
        score_b += 1
    elif answer == 'c':
        score_c += 1
    print("\n5. Який характер собаки вам подобається?")
    print("a) Активний, енергійний і завжди готовий до пригод.")
    print("b) Спокійний, але також любить гратися і проводить час із сім'єю.")
    print("c) Незалежний, тихий і не потребує багато уваги.")
    answer = input("Ваш вибір (a, b, c): ").lower()
    if answer == 'a':
        score_a += 1
    elif answer == 'b':
        score_b += 1
    elif answer == 'c':
        score_c += 1
    print("\nВаші результати:")
    if score_a > score_b and score_a > score_c:
        print("Вам підійдуть активні породи собак, такі як: вівчарка, лабрадор, коллі.")
    elif score_b > score_a and score_b > score_c:
        print("Вашим вибором може стати порода середнього розміру, наприклад: французький бульдог, кокер-спаніель, шнауцер.")
    elif score_c > score_a and score_c > score_b:
        print("Вам підійдуть спокійні і компактні породи, наприклад: чіхуахуа, йоркширський тер'єр, папільйон.")
    else:
        print("У вас збалансовані вподобання, можливо, варто звернути увагу на кілька порід!")
class DogTrainingAdvice:
    def __init__(self):
        # Список порад щодо виховання собак
        self.advice_list = [
            "Не забувайте про важливість регулярних прогулянок. Вони сприяють фізичному розвитку собаки та зміцнюють зв'язок між вами.",
            "Для успішного виховання важливо бути послідовним у своїх командах. Собака має розуміти, що від неї вимагається.",
            "Навчання через позитивне підкріплення працює найкраще. За кожен успіх нагороджуйте собаку ласощами або похвалою.",
            "Собаки люблять увагу, тому не забувайте проводити з ними час, грати та проявляти любов.",
            "Якщо ви хочете навчити собаку новій команді, починайте з простих і коротких тренувань. З часом ускладнюйте завдання.",
            "Регулярні тренування допомагають собакі краще розуміти, що від неї вимагається. Навіть 15 хвилин на день можуть дати чудовий результат.",
            "Ніколи не карайте собаку фізично. Важливо забезпечити позитивне підкріплення та конструктивну корекцію поведінки.",
            "Виховання собаки — це не лише тренування, але й розвиток емоційного зв'язку. Постарайтеся зрозуміти потреби вашого вихованця.",
            "Не забувайте про соціалізацію. Знайомте собаку з різними людьми та іншими тваринами, щоб уникнути агресії та страхів.",
            "Собаки часто вчаться за допомогою повторень, тому тренування повинні бути регулярними і без стресу.",
            "Якщо ваша собака проявляє агресивність, працюйте з кінологом, щоб уникнути серйозних проблем у майбутньому.",
            "Навчайте свою собаку на позитивних прикладах. Якщо вона робить щось правильно, відразу дайте позитивну реакцію.",
            "Дайте собаці можливість відпочивати та адаптуватися до нових ситуацій. Це допомагає їй розвиватися в стабільному середовищі.",
            "Не забувайте про фізичну активність. Це допомагає собаці залишатися здоровою та емоційно збалансованою.",
            "Дрессувати собаку потрібно не тільки вдома, а й під час прогулянок, щоб вона могла виконувати команди в будь-якому середовищі.",
            "Для успішного виховання важливо знайти баланс між дисципліною та любов'ю до собаки."
        ]
    
    def give_advice(self):
        advice = random.choice(self.advice_list)
        print(f" {advice}")
def dog_training_advice():
    advice_generator = DogTrainingAdvice()
    advice_generator.give_advice()

class DogSpecialist:
    def __init__(self):
        self.specialists = [
            {"name": "Іван Петрович", "specialization": "Виховання цуценят", "contact": "+380671234567"},
            {"name": "Марія Олексіївна", "specialization": "Тренування спортивних собак", "contact": "+380632345678"},
            {"name": "Андрій Дмитрович", "specialization": "Корекція поведінки собак", "contact": "+380635678901"},
            {"name": "Ольга Вікторівна", "specialization": "Підготовка до виставок", "contact": "+380691234567"},
            {"name": "Владислав Іванович", "specialization": "Собачий психотерапевт", "contact": "+380681234567"},
            {"name": "Светлана Олегівна", "specialization": "Дресура собак", "contact": "+380671987654"},
            {"name": "Ганна Степанівна", "specialization": "Адаптація собак до нових умов", "contact": "+380692345678"},
            {"name": "Петро Артемович", "specialization": "Загальна дресура", "contact": "+380673456789"},
            {"name": "Валерій Володимирович", "specialization": "Робота з агресивними собаками", "contact": "+380674567890"},
            {"name": "Людмила Михайлівна", "specialization": "Підготовка собак до змагань", "contact": "+380633456789"},
            {"name": "Олександр Борисович", "specialization": "Кінологічний тренінг для службових собак", "contact": "+380691987654"},
            {"name": "Діана Ігорівна", "specialization": "Профілактика і лікування поведінкових проблем", "contact": "+380681234567"},
            {"name": "Максим Юрійович", "specialization": "Дресура для домашніх собак", "contact": "+380693456789"},
            {"name": "Вікторія Петрівна", "specialization": "Робота з кінологічними породами", "contact": "+380681234567"},
            {"name": "Олексій Олександрович", "specialization": "Соціалізація собак", "contact": "+380675678901"},
            {"name": "Тетяна Василівна", "specialization": "Робота з великими породами собак", "contact": "+380633456789"},
            {"name": "Анна Леонідівна", "specialization": "Навчання собак на команду", "contact": "+380691234567"},
            {"name": "Ігор Павлович", "specialization": "Виховання собак для служби", "contact": "+380693567890"},
            {"name": "Марина Олександрівна", "specialization": "Дресура для собак-компаньйонів", "contact": "+380674567890"},
            {"name": "Степан Іванович", "specialization": "Робота з молодими собаками", "contact": "+380673567890"}
        ]
    def display_specialist(self):
        """Вивести профіль кінолога"""
        specialist = random.choice(self.specialists)
        print(f"Кінолог: {specialist['name']}")
        print(f"Спеціалізація: {specialist['specialization']}")
        print(f"Контакт: {specialist['contact']}")
def dog_specialists():
    """Кінологи, що працюють з собаками"""
    print("Кінологи, що працюють з собаками:")
    specialist = DogSpecialist()
    specialist.display_specialist()
class DogProfile:
    def __init__(self):
        self.names = ["Барсик", "Рекс", "Шерлок", "Ласка", "Макс", "Джек", "Белла", "Рокі", "Лео", "Джуді", 
            "Грета", "Адам", "Люсі", "Том", "Міллі", "Чарлі", "Фаня", "Марлі", "Зої", "Бас", 
            "Марті", "Грета", "Оскар", "Петя", "Шеррінгтон", "Тедді", "Грета", "Коко", "Маша", 
            "Томмі", "Зіма", "Бобі", "Чіп", "Тіма", "Таня", "Дейзі", "Бруно", "Міккі", "Тукі", 
            "Фредді", "Грета", "Барні", "Люк", "Тимон", "Кріс", "Скрудж", "Марко", "Луї", 
            "Дейзі", "Рубі", "Олексій", "Зара", "Стіл", "Чіко", "Грета", "Ніка", "Скала"]
        self.breeds = ["Лабрадор", "Німецька вівчарка", "Бульдог", "Пудель", "Чихуахуа", "Ротвейлер", 
            "Далматин", "Ши-тцу", "Мопс", "Кокер-спаніель", "Бігль", "Боксери", "Малінуа", 
            "Йоркширський тер'єр", "Сетер", "Аляскинський маламут", "Пітбуль", "Шнауцер", 
            "Хаскі", "Різеншнауцер"]
        self.max_age = 15  
        self.dog_name = random.choice(self.names)
        self.dog_breed = random.choice(self.breeds)
        self.dog_age = random.randint(1, self.max_age)

    def display_profile(self):
        print(f"Ім'я: {self.dog_name}")
        print(f"Вік: {self.dog_age} років")
        print(f"Порода: {self.dog_breed}")

def is_valid_phone(phone):
    return phone.startswith('+380') and len(phone) == 13 and phone[1:].isdigit()

def register_user():
    print("Зареєструватися на онлайн консультацію")
    username = input("Введіть ім'я користувача: ")
    phone = input("Введіть номер телефону (+380........): ")

    if not is_valid_phone(phone):
        print("Помилка: Номер телефону має починатися з '+380' і складатися з 12 цифр!")
        return
    
    dog_name = input("Введіть ім'я вашої собаки: ")
    dog_breed = input("Введіть породу вашої собаки: ")
    
    print(f"Реєстрація завершена успішно! {username}, ваш собака {dog_name} ({dog_breed}) тепер зареєстрований.")

def human_to_dog_years():
    print("Перевести свій вік у собачий")
    try:
        human_age = int(input("Введіть ваш вік: "))
        
        if human_age < 0:
            print("Вік не може бути від'ємним!")
            return
        if human_age > 100:
            print("Помилка: Вік не може перевищувати 100 років!")
            return
        
        dog_age = human_age * 7
        print(f"Ваш вік у собачих роках: {dog_age}")
    except ValueError:
        print("Помилка: введіть коректне число.")

while True:
    print("********************************************")
    print("*              Онлайн Кінолог              *")
    print("* 1.Зареєструватися на онлайн консультацію *")
    print("*       2.Перевести свій вік у собачий     *")
    print("*  3.Пройти тест,яка порода вам підходить  *")
    print("*             4.Профіль собаки             *")
    print("*           5.Порада щодо виховання        *")
    print("*     6.Кінологи ,що працюють з собаками   *")
    print("*          7.Залиште свій відгук           *")
    print("*             8.Про програму               *")
    print("*                   Exit                   *")
    print("********************************************")
    a = input("Оберіть команду: ")
    if a == "1":
        register_user()
    elif a == "2":
        human_to_dog_years()
    elif a == "3":
        print("Пройти тест, яка порода вам підходить")
        dog_breed_test()
    elif a == "4":
        print("Профіль собаки")
        dog_profile = DogProfile()
        dog_profile.display_profile()
    elif a == "5":
        dog_training_advice()
    elif a == "6":
        dog_specialists()
    elif a == "7":
        c=input("Залиште свій відгук")
        print("Дякуємо за відгук!")
    elif a == "8":
        print("Про програму")
        print("Програма створена на тему 'Кінолог'")
        print("Розроблена Шевчук Анною")
        print("Група Г")
    elif a.lower() == "exit":
        print("Дякуємо за користування програмою!")
        break
    else:
        print("Невірна команда!")

